<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.08" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="" keyVect="v7UYbFWY1F8ZS39tM6UqjA==" exportKeySalt="f7d5d8fd-2353-4533-b484-04189344f99a" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String">null</Field>
	<Field name="DelegateClass" type="java.lang.String">null</Field>
	<Field name="DelegateScript" type="java.lang.String">null</Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2018-05-25 11:55:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8080912d-8d2a-4edc-83dc-6d29c70c1908]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="IndSuppSetBased" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String">null</Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[92]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[13193]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String">null</Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="KmTechno" type="java.lang.String">null</Field>
	<Field name="KmVersion" type="java.lang.String"><![CDATA[9]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2018-05-25 11:55:19.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String">null</Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String">null</Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String">null</Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[RKM Oracle SAP Sybase PowerDesigner PDM]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KR]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d5af5e48-a248-4400-9874-d9e69aa627c1]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13193]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[COMPONENT NAME: RKM Oracle SAP Sybase PowerDesigner PDM

AUTHOR: Vodafone

DESCRIPTION
	- Reverse Engineering Knowledge Module For SAP Sybase PowerDesigner to support release 2 of the Vodafone Group Atomic Data Model
                     - This RKM makes use of the following PowerDesigner extended attributes:
                        * VF Subject Area

OPTIONS (Refer to Option descriptions for more information on each option)
	- PDM_FILE_NAME: Physical Data Model File Name.
	- MODEL_FILTER: Filter for the models to reverse.
	- TABLE_FILTER: Filter for the tables to reverse. 

LIMITATIONS
	- No support for range constraints or referential integrity constraints
	- Supports reverse engineering of Tables only. No support for views, queue, system table, table alias, or synonmns]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bb1d4204-f5d3-4757-8594-d0e589610acd]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[654]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[${System.getProperty('ide.user.dir')}/oracledi/datamodels/VF_PDM.pdm]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[PDM_FILE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Physical Data Model File Name.]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5d043176-fdc8-447b-8577-7deceb08431f]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[13194]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[655]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[NONE]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MODEL_FILTER]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Filter for the models to reverse]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2da88106-e535-4fd9-a835-5d3d44f1d758]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13194]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[A PowerDesigner Physical Data Model may contains one or more models. This option allows the user to choose the models to reverse.   Examples of Filters  * Model.Name == 'ADWH' * Model.Name == 'IDD' * Model.Name == 'VF_PDM' && Model.Creator == 'Mirjam.Berger'  The default value NONE reverses all models from the Physical Data Model]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1a20bd4e-8459-4417-a95a-0dc0f5686d79]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[13195]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[656]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[3]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[NONE]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[TABLE_FILTER]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Filter for the tables to reverse]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d9cf7b4f-eb17-4d40-ad1b-06e7f99c2096]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13195]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[This option allows the user to choose the tables to reverse.   

Examples of Filters  
  1. Only reverse engineer tables where the table name starts with 'ACCESS'
     Table.Name.toString().startsWith('ACCESS') 
  2. Only reverse engineer tables in the Party subject area
     getExtendedAttribute(Table.ExtendedAttributesText.toString(), 'VF Subject Area')?.contains('Party')
  3. Only reverse engineer tables where the table creator is Mirjam.Berger
     Table.Creator == 'Mirjam.Berger' 
  4. Only reverse engineer tables that have been modified after 22 August 2013
     Table.ModificationDate.toLong() > Date.parse("dd-MM-yyyy","22-08-2013").time.div(1000) 
  5. Only reverse engineer tables where the table name starts with 'ACCESS' and the table creator is Mirjam.Berger
     Table.Name.toString().startsWith('ACCESS') && Table.Creator == 'Mirjam.Berger'  
  6. Only reverse engineer tables where the owner's code is 'CORE_PARTY_T${EDWENV}'
     model.RootObject.Children.Model.Users.User.find { it.@Id == Table.Owner.User.@Ref}.Code.toString() ==  'CORE_PARTY_T${EDWENV}'
  
The default value NONE reverses all tables from the Physical Data Model]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9f7e4877-f46a-47ea-b95a-45b1866bd689]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[657]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[4]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[NONE]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[PACKAGE_FILTER]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Filter for the packages to reverse]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[26c8b645-dc13-4bbe-ba08-d4dc87e79dd2]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[13196]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[658]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[5]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[NONE]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[VIEW_FILTER]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Filter for the views to reverse]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ef90b0ef-6528-423f-8f43-dba8608137ef]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13196]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[This option allows the user to choose the views to reverse.   

Examples of Filters  
  1. Only reverse engineer views where the view name starts with 'ACCESS'
     View.Name.toString().startsWith('ACCESS') 
  2. Only reverse engineer views in the Party subject area
     getExtendedAttribute(View.ExtendedAttributesText.toString(), 'VF Subject Area')?.contains('Party')
  3. Only reverse engineer views where the view creator is Mirjam.Berger
     View.Creator == 'Mirjam.Berger' 
  4. Only reverse engineer views that have been modified after 22 August 2013
     View.ModificationDate.toLong() > Date.parse("dd-MM-yyyy","22-08-2013").time.div(1000) 
  5. Only reverse engineer views where the view name starts with 'ACCESS' and the view creator is Mirjam.Berger
     View.Name.toString().startsWith('ACCESS') && View.Creator == 'Mirjam.Berger'  
  6. Only reverse engineer views where the owner's code is 'CORE_PARTY_T${EDWENV}'
     model.RootObject.Children.Model.Users.User.find { it.@Id == View.Owner.User.@Ref}.Code.toString() ==  'CORE_PARTY_T${EDWENV}'
  
The default value NONE reverses all views from the Physical Data Model]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[TERADATA]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13197]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2018-05-25 11:55:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2d37aa00-7419-4edd-8cfc-d77e6669b13f]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1076]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String">null</Field>
	<Field name="KimJrnPop" type="java.lang.String">null</Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2018-05-25 11:55:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[10]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Reset MetaData]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ea1900b4-6057-4d33-b407-825fd0e61afe]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13197]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SnpsReverseResetTable -MODEL=<%=odiRef.getModel("GLOBAL_ID")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13198]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[GROOVY]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2018-05-25 11:55:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[719a57bb-dc77-454c-83e7-cc362c199349]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1077]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String">null</Field>
	<Field name="KimJrnPop" type="java.lang.String">null</Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2018-05-25 11:55:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[30]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Start the Reverse]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5f182551-b760-466d-ba8a-035fdf85d062]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13198]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[import groovy.sql.Sql
import java.util.logging.Logger
 
 String.metaClass.take <<  { n ->
     return delegate.size() < n ? delegate : delegate[0..n-1]
 }
                                 
/**
 * Converts ANSI data type to the equivalent Oracle data type.
 * 
 * Oracle recognizes the ANSI data type name that differs from the Oracle 
 * database data type name but converts the data type to the equivalent 
 * Oracle data type. 
 *
 * http://stackoverflow.com/questions/11031409/decimals-p-or-numbers-p
 * http://docs.oracle.com/cd/E11882_01/server.112/e26088/sql_elements001.htm#SQLRF55584
 */
 ansi2oracle = { String ansiDataType ->
     def oracleDT
     if (ansiDataType.indexOf('(') > 0) {
          def dt = ansiDataType.substring(0, ansiDataType.indexOf('('))
          if (dt == 'VARCHAR') {
               oracleDT = 'VARCHAR2'
          } else if (dt == 'DECIMAL') {
               oracleDT = 'NUMBER'
          } else {
               oracleDT = dt
          }
     } else {
          if (ansiDataType == 'DECIMAL') {
               oracleDT = 'NUMBER'
          } else if (ansiDataType == 'INTEGER') {
               oracleDT = 'NUMBER'
          } else if (ansiDataType == 'SMALLINT') {
               oracleDT = 'NUMBER'
          } else {
               oracleDT = ansiDataType
          }
     }
     return oracleDT
 }
 
 parseExtendedAttribute = { line ->
     def keyValue = []
     def lineTokens = line.split(',')
     def key = lineTokens[0]
     lineTokens = lineTokens.drop(1)
     def valueTokens = lineTokens.join(',').split("=")

     def value = null
     if (valueTokens.size() > 1) {
          valueTokens = valueTokens.drop(1)
          value = valueTokens.join('=')
     }
     keyValue = [key, value]
 }
 isMultiline = { line ->
    line.contains('{')  && line.split(',').size() > 2
 }
 getExtendedAttribute = { extendedAttributesText, attributeName ->
     assert extendedAttributesText != null, 'extendedAttributesText should not be null'
     assert attributeName != null, 'attributeName should not be null'
     def group = 'PDM Attributes' //'VIN PDM Attributes'
     def extendedAttributes = [:]
     def matchedGroup = (group == null) 
     // split the extended attribute text string using  the PowerDesigner GUID 
     // e.g. {D3C8FE44-60C0-42BB-89F2-E92F37A49016},  <- note the trailing comma
     // the string is split using a GUID as opposed to a carriage return since  extended 
     // attribute values may themselves contains carriage returns
     extendedAttributesText.split('[\r\n]\\{[A-Z0-9]*-[A-Z0-9]*-[A-Z0-9]*-[A-Z0-9]*-[A-Z0-9]*},').each  { line ->
          if (line) {
               if (isMultiline(line)) {
                    // multiple extended attributes encoded in a single line
                 def multiLineTokens = line.split('\\{[A-Z0-9]*-[A-Z0-9]*-[A-Z0-9]*-[A-Z0-9]*-[A-Z0-9]*},')
                 if (!multiLineTokens[0]) {
                    multiLineTokens = multiLineTokens.drop(1)
                 }
                    def line1 = multiLineTokens[0]
                    multiLineTokens = multiLineTokens.drop(1)
                    def line2 = multiLineTokens[0]

                    String key, value
                    (key, value) = parseExtendedAttribute(line1)
                    extendedAttributes[key] = value

                    if (group != null) 
                         matchedGroup = key.endsWith(group)
                    
                    if (matchedGroup) {
                         (key, value) = parseExtendedAttribute(line2)
                         extendedAttributes[key] = value
                    }
               } else {
                    if (matchedGroup) {
                         String key, value
                         (key, value) = parseExtendedAttribute(line)
                         extendedAttributes[key] = value
                    }
               }
          } else {
               // Ignore blank lines
          }
     }
     return extendedAttributes[attributeName]?.trim()
 }
 /**
  * Determines whether the specified table column is an SCD
  * natural key. A column is considered to be a SCD natural
  * key if the column is a primary key. The exception to this 
  * rule is if the column is a starting timestamp (VALID_FROM_DT).
  * 
  * @return true if the specified table column is an SCD natural key otherwise
  * false is returned.  
  */
 def isColumnSCDNaturalKey = { Table, Column ->
    def retVal = false
    if (Column.Code.toString()?.toUpperCase() != 'VALID_FROM_DT') {
        Table.PrimaryKey.Key.each { PK ->
            def PKRef = Table.Keys.Key.find { it.@Id == PK.@Ref }
            PKRef["Key.Columns"].Column.find { PKCol ->
                def matchedPKColumn = Table.Columns.Column.find { it.@Id == PKCol.@Ref }
                if (matchedPKColumn.Code.toString() == Column.Code.toString()) {
                    retVal = true
                    return // match found break out of loop
                }
            }
        }
    }
    return retVal
}

def colCode2SCDBehaviour = ['VALID_FROM_DT':'ST', 'VALID_UNTIL_DT':'ET','CURRENT_IND':'CR']
def colBehaviour = ['Dimension Type 1 Attribute':'OC', 'x - Overwrite on change to full history':'OC','Dimension Type 2 Attribute':'IR']
def tableExtAttrName2FFCode = ['VF Entity Type'                : 'ORACLE_ENTITY_TYPE',
                               'VIN Major Entity Name'         : 'ORACLE_VIN_MAJOR_ENTITY_NAME',
                               'VF Customization Level'        : 'ORACLE_CUSTOM_LVL']
def colExtAttrName2FFCode   = ['Mapping Join'                  : [ ffCode: 'ORACLE_MAPPING_JOIN_COLUMN', maxAttrSize : 1000],
                               'Mapping Selector'              : [ ffCode: 'ORACLE_MAPPING_SELECTOR_COLUMN', maxAttrSize : 500],
                               'Mapping to Physical Column(s)' : [ ffCode: 'ORACLE_MAPPING_TO_PHYSICAL_COLUMN', maxAttrSize : 500],
                               'VF Customization Level'        : [ ffCode: 'ORACLE_CUSTOM_LVL_COLUMN']]

def getSCDColType = { Table, Column ->

    String scdColType
    if (isColumnSCDNaturalKey(Table, Column)) {
        scdColType = 'NK'
    } else if (getExtendedAttribute(Table.ExtendedAttributesText.toString(), "VF Subject Area") in ['01 - Party','02 - Offering','03 - Finance', '05 - Event','12 - Master'] && (Column.Code.toString()=='Party_Source_Cd' || Column.Code.toString()=='Source_System_Cd' || Column.Code.toString()=='Event_Source_Cd')) {
       scdColType='IR'
    } else {
        scdColType = colCode2SCDBehaviour[Column.Code.toString()?.toUpperCase()]
        if (!scdColType) { 
            def scdValue = getExtendedAttribute(Column.ExtendedAttributesText.toString(), "VF Attribute Type")
            scdColType = colBehaviour[scdValue]
        }
    }
    return scdColType
}

 logger = Logger.getLogger("")
 
 def pdm = "file:///<%=snpRef.getOption("PDM_FILE_NAME")%>"
 
 // Get connection to repository
 def repoConn = odiRef.getJDBCConnection("DEST")
 repoConn.setAutoCommit(false)
 def sql = new Sql(repoConn)
 
 
model = new XmlSlurper().parse(pdm).declareNamespace(a: 'attribute').declareNamespace(o:'object').declareNamespace(c:'collection')

def subjectAreaSet = [] as Set
def filteredGeneratedTables = []

def parseTablesClosure = { Table ->
    def invalidTableColDT = Table.Columns.Column.findAll { !it.DataType.toString() }.collect { it.Name }
    if (!invalidTableColDT) {
        def subjectArea = getExtendedAttribute(Table.ExtendedAttributesText.toString(), "VF Subject Area")
        def entityTypeValue = getExtendedAttribute(Table.ExtendedAttributesText.toString(), "VF Entity Type")
        if (subjectArea) {
            subjectAreaSet.add(subjectArea)
        } else {
            logger.warning("${Table.Name} has not been assigned to a subject area")
        } 

        def params = [
            '<%=odiRef.getModel("GLOBAL_ID")%>',         // MOD_GUID
            Table.Name.toString(),                       // TABLE_NAME
            Table.Code.toString(),                       // RES_NAME
            Table.Code.toString(),                       // TABLE_ALIAS
            'T',                                         // TABLE_TYPE
            Table.Comment.toString().take(250),          // TABLE_DESC
            '1',                                         // IND_SHOW
            null,                                        // SMOD_CODE
            entityTypeValue?.startsWith('dimension') ? 'DH' : null // OLAP_TYPE
        ]
        <%if (!"NONE".equals(odiRef.getOption("TABLE_FILTER"))) {%>
            filteredGeneratedTables << Table.Code.toString()

        <%}%>
        // SNP_REV_TABLE describes the datastores (tables, views, etc.) to reverse-engineer.
        logger.info("insert into SNP_REV_TABLE (MOD_GUID,TABLE_NAME,RES_NAME,TABLE_ALIAS,TABLE_TYPE,TABLE_DESC,IND_SHOW,SMOD_CODE,OLAP_TYPE) values (${params.join(',')})")
        sql.execute('insert into SNP_REV_TABLE (MOD_GUID,TABLE_NAME,RES_NAME,TABLE_ALIAS,TABLE_TYPE,TABLE_DESC,IND_SHOW,SMOD_CODE,OLAP_TYPE) values (?,?,?,?,?,?,?,?,?)', params)
        def colpos = 1
        Table.Columns.Column.each { Column ->
            params = [
                '<%=odiRef.getModel("GLOBAL_ID")%>',  // MOD_GUID
                Table.Name.toString(),                // TABLE_NAME
                Column.Code.toString().toUpperCase(), // COL_NAME
                Column.Name.toString(),               // COL_HEADING
                Column.Comment.toString().take(250),  // COL_DESC
                colpos++, // POS
                ansi2oracle(Column.DataType.toString()), // DT_DRIVER
                Column.Length.toString() ? Column.Length.toString().toInteger() : null, // LONGC
                Column.Precision.toString() ? Column.Precision.toString().toInteger() : null, // SCALEC
                Column["Column.Mandatory"].toString(), // COL_MANDATORY
                '0', // CHECK_FLOW
                '0', // CHECK_STAT
                getSCDColType(Table,Column),  // SCD_COL_TYPE
                Column.DefaultValue.toString() // DEF_VALUE
            ]
            // SNP_REV_COL lists the datastore columns to reverse-engineer
            logger.info("insert into SNP_REV_COL (MOD_GUID,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,POS,DT_DRIVER,LONGC,SCALEC,COL_MANDATORY, CHECK_FLOW, CHECK_STAT, SCD_COL_TYPE,DEF_VALUE) values (${params.join(',')})")
            sql.execute('insert into SNP_REV_COL (MOD_GUID,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,POS,DT_DRIVER,LONGC,SCALEC,COL_MANDATORY, CHECK_FLOW, CHECK_STAT, SCD_COL_TYPE,DEF_VALUE) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?)', params)
    
            // Extended Attributes -> Flexfields
            colExtAttrName2FFCode.each { extAttrName, extAttrVal ->
                def ffCode = extAttrVal.ffCode
                def maxAttrSize = extAttrVal.maxAttrSize
                def extAttrValue = getExtendedAttribute(Column.ExtendedAttributesText.toString(), extAttrName)
                if (extAttrValue != null) {
                    if (!maxAttrSize || extAttrValue.size() <= maxAttrSize) {

                        def extAttrTokens = extAttrValue.split("(?<=\\G.{250})");
                        def ffCodeOrder = 0
                        extAttrTokens.each { extAttrToken ->
                            def ffCodeName = ffCodeOrder == 0 ? ffCode : "${ffCode}${ffCodeOrder}"
                            params = [
                                '<%=odiRef.getModel("GLOBAL_ID")%>',  // MOD_GUID
                                Table.Name.toString(),                // TABLE_NAME
                                Column.Code.toString().toUpperCase(), // COL_NAME
                                ffCodeName.toString(),                // FF_CODE
                                extAttrToken,                         // SHORT_TXT_VALUE
                                null                                  // NUM_VALUE
                            ]
                            ffCodeOrder ++
                            // SNP_REV_COL_FFV set the flexfield values to reverse-engineer
                            logger.info("insert into SNP_REV_COL_FFV (MOD_GUID,TABLE_NAME,COL_NAME,FF_CODE,SHORT_TXT_VALUE,NUM_VALUE) values (${params.join(',')})")
                            sql.execute('insert into SNP_REV_COL_FFV (MOD_GUID,TABLE_NAME,COL_NAME,FF_CODE,SHORT_TXT_VALUE,NUM_VALUE) values (?,?,?,?,?,?)', params)
                        }
                    } else {
                        logger.warning("Extended attribute [${extAttrName}] has exceeded its maximum allowable length and will not be imported")
                    } 
                }
            }

            // Populate ORACLE_OVRIDE_ON_CHG_TRG_VAL_COLUMN flexfield
            def SCD2ShortTxtValue = ['Dimension Type 1 Attribute':'SINCE_LAST_HISTORISED_CHANGE', 
                                     'x - Overwrite on change to full history':'ALL_ROWS']  // define this outside of the loop
            def scdValue = getExtendedAttribute(Column.ExtendedAttributesText.toString(),"VF Attribute Type") 
            if (scdValue =='Dimension Type 1 Attribute' || scdValue == 'x - Overwrite on change to full history' ){
                params = [
                    '<%=odiRef.getModel("GLOBAL_ID")%>',  // MOD_GUID
                    Table.Name.toString(),                // TABLE_NAME
                    Column.Code.toString().toUpperCase(), // COL_NAME
                    'ORACLE_OVRIDE_ON_CHG_TRG_VAL_COLUMN',// FF_CODE
                    SCD2ShortTxtValue[scdValue],          // SHORT_TXT_VALUE
                    null,                                 // NUM_VALUE
                ]
        
                logger.info("insert into SNP_REV_COL_FFV (MOD_GUID,TABLE_NAME,COL_NAME,FF_CODE,SHORT_TXT_VALUE,NUM_VALUE) values (${params.join(',')})")
                sql.execute('insert into SNP_REV_COL_FFV (MOD_GUID,TABLE_NAME,COL_NAME,FF_CODE,SHORT_TXT_VALUE,NUM_VALUE) values (?,?,?,?,?,?)', params)
            }

            // Populate INSERT_LOAD_ID_COLUMN / ORACLE_UPDATE_LOAD_ID_COLUMN flexfield
            def colCode2FFCode    = ['INSERT_LOAD_ID' : 'ORACLE_INSERT_LOAD_ID_COLUMN',
                                     'UPDATE_LOAD_ID' : 'ORACLE_UPDATE_LOAD_ID_COLUMN']   // define this outside of the loop
            def columnCode = Column.Code.toString().toUpperCase()
            if (columnCode == "INSERT_LOAD_ID" || columnCode == "UPDATE_LOAD_ID") {
                params = [
                    '<%=odiRef.getModel("GLOBAL_ID")%>',  // MOD_GUID
                    Table.Name.toString(),                // TABLE_NAME
                    Column.Code.toString().toUpperCase(), // COL_NAME
                    colCode2FFCode[columnCode],           // FF_CODE
                    null,                                 // SHORT_TXT_VALUE
                    1,                                    // NUM_VALUE
               ]
               logger.info("insert into SNP_REV_COL_FFV (MOD_GUID,TABLE_NAME,COL_NAME,FF_CODE,SHORT_TXT_VALUE,NUM_VALUE) values (${params.join(',')})")
               sql.execute('insert into SNP_REV_COL_FFV (MOD_GUID,TABLE_NAME,COL_NAME,FF_CODE,SHORT_TXT_VALUE,NUM_VALUE) values (?,?,?,?,?,?)', params)
            }
        }

        // Parse Indexes
        Table.Indexes.Index.each { Index ->
            params = [
                '<%=odiRef.getModel("GLOBAL_ID")%>', // MOD_GUID
                Table.Name.toString(),      // TABLE_NAME
                Index.Code.toString(),      // KEY_NAME
                'I',                        // CONS_TYPE (Index)
                '1',                        // IND_ACTIVE
                '0',                        // CHECK_FLOW
                '0',                        // CHECK_STAT
            ]
            // SNP_REV_KEY describes the datastore primary keys, alternate keys and indexes to reverse-engineer
            logger.info("insert into SNP_REV_KEY (MOD_GUID,TABLE_NAME,KEY_NAME,CONS_TYPE,IND_ACTIVE,CHECK_FLOW,CHECK_STAT) values (${params.join(',')})")
            sql.execute('insert into SNP_REV_KEY (MOD_GUID,TABLE_NAME,KEY_NAME,CONS_TYPE,IND_ACTIVE,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?)', params)
            def idxpos = 0
            Index.IndexColumns.IndexColumn.each { IndexColumn ->
                params = [
                    '<%=odiRef.getModel("GLOBAL_ID")%>',                                                                        // MOD_GUID
                    Table.Name.toString(),                                                                                      // TABLE_NAME
                    Index.Code.toString(),                                                                                      // KEY_NAME
                    Table.Columns.Column.find { it.@Id == IndexColumn.Column.Column.@Ref }.Code.toString().toUpperCase(),       // COL_NAME
                    idxpos++
                ]
                // SNP_REV_KEY_COL lists the columns participating to the primary keys, alternate keys and indexes to reverse-engineer
                logger.info("insert into SNP_REV_KEY_COL (MOD_GUID,TABLE_NAME,KEY_NAME,COL_NAME,POS) values (${params.join(',')})")
                sql.execute('insert into SNP_REV_KEY_COL (MOD_GUID,TABLE_NAME,KEY_NAME,COL_NAME,POS) values (?,?,?,?,?)', params)
            }
        }
    
        // Parse Primary Keys
        Table.PrimaryKey.Key.each { Key ->
            def PrimaryKey = Table.Keys.Key.find { it.@Id == Key.@Ref }
            params = [
                '<%=odiRef.getModel("GLOBAL_ID")%>', // MOD_GUID
                Table.Name.toString(),      // TABLE_NAME
                PrimaryKey.Code.toString(), // KEY_NAME
                'PK',                       // CONS_TYPE (Primary Key)
                '1',                        // IND_ACTIVE
                '0',                        // CHECK_FLOW
                '0',                        // CHECK_STAT
            ]
            // SNP_REV_KEY describes the datastore primary keys, alternate keys and indexes to reverse-engineer
            logger.info("insert into SNP_REV_KEY (MOD_GUID,TABLE_NAME,KEY_NAME,CONS_TYPE,IND_ACTIVE,CHECK_FLOW,CHECK_STAT) values (${params.join(',')})")
            sql.execute('insert into SNP_REV_KEY (MOD_GUID,TABLE_NAME,KEY_NAME,CONS_TYPE,IND_ACTIVE,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?)', params)
            def idxpos = 0
            PrimaryKey["Key.Columns"].Column.each { Column ->
                params = [
                    '<%=odiRef.getModel("GLOBAL_ID")%>',                                                     // MOD_GUID
                    Table.Name.toString(),                                                                   // TABLE_NAME
                    PrimaryKey.Code.toString(),                                                              // KEY_NAME
                    Table.Columns.Column.find { it.@Id == Column.@Ref }.Code.toString().toUpperCase(),       // COL_NAME
                    idxpos++
                ]
                // SNP_REV_KEY_COL lists the columns participating to the primary keys, alternate keys and indexes to reverse-engineer
                logger.info("insert into SNP_REV_KEY_COL (MOD_GUID,TABLE_NAME,KEY_NAME,COL_NAME,POS) values (${params.join(',')})")
                sql.execute('insert into SNP_REV_KEY_COL (MOD_GUID,TABLE_NAME,KEY_NAME,COL_NAME,POS) values (?,?,?,?,?)', params)
            }
        }

        // Extended Attributes -> Flexfields
        tableExtAttrName2FFCode.each { extAttrName, ffCode ->
            def extAttrValue = getExtendedAttribute(Table.ExtendedAttributesText.toString(), extAttrName)
            if (extAttrValue != null) {
                params = [
                    '<%=odiRef.getModel("GLOBAL_ID")%>',  // MOD_GUID
                    Table.Name.toString(),                // TABLE_NAME
                    ffCode,                               // FF_CODE
                    null,                                 // NUM_VALUE
                    extAttrValue                          // SHORT_TXT_VALUE
               ]
               // SNP_REV_TABLE_FFV set the flexfield values to reverse-engineer
               logger.info("insert into SNP_REV_TABLE_FFV (MOD_GUID,TABLE_NAME, FF_CODE, NUM_VALUE, SHORT_TXT_VALUE) values (${params.join(',')})")
               sql.execute('insert into SNP_REV_TABLE_FFV (MOD_GUID,TABLE_NAME, FF_CODE, NUM_VALUE, SHORT_TXT_VALUE) values (?,?,?,?,?)', params)
            }
        }
    
        if (Table.Code.toString()?.startsWith("C_")) {
            params = [
                '<%=odiRef.getModel("GLOBAL_ID")%>',  // MOD_GUID
                Table.Name.toString(),                // TABLE_NAME
                'ORACLE_CONCEPTUAL_ENTITY',           // FF_CODE
                1,                                    // NUM_VALUE
                null                                  // SHORT_TXT_VALUE
            ]
            // SNP_REV_TABLE_FFV set the flexfield values to reverse-engineer
            logger.info("insert into SNP_REV_TABLE_FFV (MOD_GUID,TABLE_NAME, FF_CODE, NUM_VALUE, SHORT_TXT_VALUE) values (${params.join(',')})")
            sql.execute('insert into SNP_REV_TABLE_FFV (MOD_GUID,TABLE_NAME, FF_CODE, NUM_VALUE, SHORT_TXT_VALUE) values (?,?,?,?,?)', params)    
        }
    } else {
        logger.warning("Table [${Table.Name}] is missing a data type definition for the following columns ${invalidTableColDT}. Skipping Table generation")
    }
}
def parseViewClosure = { View ->
    def invalidViewColNames = View.Columns.ViewColumn.findAll { !it.DataType.toString() }.collect { it.Name }    
    if (!invalidViewColNames) {
        def pos=1
        def params = [
            '<%=odiRef.getModel("GLOBAL_ID")%>',         // MOD_GUID
            View.Name.toString(),                        // TABLE_NAME
            View.Code.toString(),                        // RES_NAME
            View.Code.toString(),                        // TABLE_ALIAS
            'V',                                         // TABLE_TYPE
            View.Comment.toString().take(250),           // TABLE_DESC
            '1'                                          // IND_SHOW
        ]
        // SNP_REV_TABLE describes the datastores (tables, views, etc.) to reverse-engineer.
        logger.info("insert into SNP_REV_TABLE (MOD_GUID,TABLE_NAME,RES_NAME,TABLE_ALIAS,TABLE_TYPE,TABLE_DESC,IND_SHOW) values (${params.join(',')})")
        sql.execute('insert into SNP_REV_TABLE (MOD_GUID,TABLE_NAME,RES_NAME,TABLE_ALIAS,TABLE_TYPE,TABLE_DESC,IND_SHOW) values (?,?,?,?,?,?,?)', params)	
    
        View.Columns.ViewColumn.each { viewColumn ->
            params = [
                '<%=odiRef.getModel("GLOBAL_ID")%>',         // MOD_GUID
                View.Name.toString(),                        // TABLE_NAME
                viewColumn.Code.toString().toUpperCase(),    // COL_NAME
                viewColumn.Name.toString(),                  // COL_HEADING
                viewColumn.Comment.toString().take(250),     // COL_DESC
                pos++,                                       // POS
                ansi2oracle(viewColumn.DataType.toString()), // DT_DRIVER
                viewColumn.Length.toString() ? viewColumn.Length.toString().toInteger() : null,       // LONGC
                viewColumn.Precision.toString() ? viewColumn.Precision.toString().toInteger() : null, // SCALEC
                '0',                                         // COL_MANDATORY
                '0',                                         // CHECK_FLOW
                '0'                                          // CHECK_STAT
            ]
            // SNP_REV_COL lists the datastore columns to reverse-engineer
            logger.info("insert into SNP_REV_COL (MOD_GUID,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,POS,DT_DRIVER,LONGC,SCALEC,COL_MANDATORY, CHECK_FLOW, CHECK_STAT) values (${params.join(',')})")
            sql.execute('insert into SNP_REV_COL (MOD_GUID,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,POS,DT_DRIVER,LONGC,SCALEC,COL_MANDATORY, CHECK_FLOW, CHECK_STAT) values (?,?,?,?,?,?,?,?,?,?,?,?)', params)

            // Extended Attributes -> Flexfields
            colExtAttrName2FFCode.each { extAttrName, extAttrVal ->
                def ffCode = extAttrVal.ffCode
                def maxAttrSize = extAttrVal.maxAttrSize
                def extAttrValue = getExtendedAttribute(viewColumn.ExtendedAttributesText.toString(), extAttrName)
                if (extAttrValue != null) {
                    if (!maxAttrSize || extAttrValue.size() <= maxAttrSize) {
                        def extAttrTokens = extAttrValue.split("(?<=\\G.{250})");
                        def ffCodeOrder = 0
                        extAttrTokens.each { extAttrToken ->
                            def ffCodeName = ffCodeOrder == 0 ? ffCode : "${ffCode}${ffCodeOrder}"
                            params = [
                                '<%=odiRef.getModel("GLOBAL_ID")%>',      // MOD_GUID
                                View.Name.toString(),                     // TABLE_NAME
                                viewColumn.Code.toString().toUpperCase(), // COL_NAME
                                ffCodeName.toString(),                    // FF_CODE
                                extAttrToken,                             // SHORT_TXT_VALUE
                                null                                      // NUM_VALUE
                            ]
                            ffCodeOrder ++
                            // SNP_REV_COL_FFV set the flexfield values to reverse-engineer
                            logger.info("insert into SNP_REV_COL_FFV (MOD_GUID,TABLE_NAME,COL_NAME,FF_CODE,SHORT_TXT_VALUE,NUM_VALUE) values (${params.join(',')})")
                            sql.execute('insert into SNP_REV_COL_FFV (MOD_GUID,TABLE_NAME,COL_NAME,FF_CODE,SHORT_TXT_VALUE,NUM_VALUE) values (?,?,?,?,?,?)', params)
                        }
                    } else {
                        logger.warning("Extended attribute [${extAttrName}] has exceeded its maximum allowable length and will not be imported")
                    } 
                }
            }
        }

        // Extended Attributes -> Flexfields
        tableExtAttrName2FFCode.each { extAttrName, ffCode ->
            def extAttrValue = getExtendedAttribute(View.ExtendedAttributesText.toString(), extAttrName)
            if (extAttrValue != null) {
                params = [
                    '<%=odiRef.getModel("GLOBAL_ID")%>',  // MOD_GUID
                    View.Name.toString(),                // TABLE_NAME
                    ffCode,                               // FF_CODE
                    null,                                 // NUM_VALUE
                    extAttrValue                          // SHORT_TXT_VALUE
               ]
               // SNP_REV_TABLE_FFV set the flexfield values to reverse-engineer
               logger.info("insert into SNP_REV_TABLE_FFV (MOD_GUID,TABLE_NAME, FF_CODE, NUM_VALUE, SHORT_TXT_VALUE) values (${params.join(',')})")
               sql.execute('insert into SNP_REV_TABLE_FFV (MOD_GUID,TABLE_NAME, FF_CODE, NUM_VALUE, SHORT_TXT_VALUE) values (?,?,?,?,?)', params)
            }
        }
    } else {
        logger.warning("View [${View.Name}] is missing a data type definition for the following columns ${invalidViewColNames}. Skipping view generation")
    }
}

def parsePackagesClosure = { Package ->
    <%if ("NONE".equals(odiRef.getOption("TABLE_FILTER"))) {%>
        Package.Tables.Table.findAll { Table -> Table.Generated != '0'}.each parseTablesClosure
    <%} else {%>
        Package.Tables.Table.findAll { Table -> Table.Generated != '0' && <%=odiRef.getOption("TABLE_FILTER")%>}.each parseTablesClosure
    <%}%>
    <%if ("NONE".equals(odiRef.getOption("VIEW_FILTER"))) {%>
        Package.Views.View.findAll { View -> View.Generated != '0'}.each parseViewClosure
    <%} else {%>
        Package.Views.View.findAll { View -> View.Generated != '0' && <%=odiRef.getOption("VIEW_FILTER")%>}.each parseViewClosure
    <%}%>
}

def parseReferencesClosure = { Reference ->
    def parentTable =  Reference.parent().parent().Tables.Table.find { it.@Id == Reference.ParentTable.Table.@Ref }
    def childTable =  Reference.parent().parent().Tables.Table.find { it.@Id == Reference.ChildTable.Table.@Ref }
    def fkName = Reference.ForeignKeyConstraintName.toString() ? Reference.ForeignKeyConstraintName.toString() :
            "FK_${childTable.Code.toString().take(30)}_${Reference.Code.toString().take(60)}_${parentTable.Code.toString().take(30)}".toString()

    if ("NONE".equals("<%=odiRef.getOption("TABLE_FILTER")%>") ||  filteredGeneratedTables.contains(childTable.Code.toString())) {
        def validReference = Reference.Joins.ReferenceJoin.every { ReferenceJoin ->
            def parentColumn = parentTable.Columns.Column.find { it.@Id == ReferenceJoin.Object1.Column.@Ref }
            def childColumn = childTable.Columns.Column.find { it.@Id == ReferenceJoin.Object2.Column.@Ref }
            parentColumn.Code.toString() && childColumn.Code.toString()
        }
        if (validReference) {
            def params = [
                '<%=odiRef.getModel("GLOBAL_ID")%>',  // MOD_GUID
                fkName,                               // FK_NAME
                childTable.Code.toString(),           // TABLE_NAME
                'U',                                  // FK_TYPE
                parentTable.Code.toString(),          // PK_TABLE_NAME
                '0',                                  // IND_ACTIVE
                '0',                                  // CHECK_FLOW
                '1'                                   // CHECK_STAT
            ]

            // SNP_REV_JOIN describes datastore references (foreign keys) to reverse-engineer.
            logger.info("insert into SNP_REV_JOIN (MOD_GUID,FK_NAME,TABLE_NAME,FK_TYPE,PK_TABLE_NAME,IND_ACTIVE,CHECK_FLOW,CHECK_STAT) values (${params.join(',')})")
            sql.execute('insert into SNP_REV_JOIN (MOD_GUID,FK_NAME,TABLE_NAME,FK_TYPE,PK_TABLE_NAME,IND_ACTIVE,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?,?)', params)

            def pos = 1
            Reference.Joins.ReferenceJoin.each { ReferenceJoin ->
                def parentColumn = parentTable.Columns.Column.find { it.@Id == ReferenceJoin.Object1.Column.@Ref }
                def childColumn = childTable.Columns.Column.find { it.@Id == ReferenceJoin.Object2.Column.@Ref }

                if (parentColumn.Code.toString() && childColumn.Code.toString()) {
                    params = [
                         '<%=odiRef.getModel("GLOBAL_ID")%>',         // MOD_GUID
                         fkName,                                      // FK_NAME
                         childColumn.Code.toString().toUpperCase(),   // FK_COL_NAME
                         childTable.Code.toString(),                  // FK_TABLE_NAME
                         parentColumn.Code.toString().toUpperCase(),  // PK_COL_NAME
                         parentTable.Code.toString(),                 // PK_TABLE_NAME
                         pos++,                                       // POS
                    ]
                    // SNP_REV_JOIN_COL lists the matching attributes participating to the references (foreign keys) to reverse-engineer.
                    logger.info("insert into SNP_REV_JOIN_COL (MOD_GUID,FK_NAME,FK_COL_NAME,FK_TABLE_NAME,PK_COL_NAME,PK_TABLE_NAME,POS) values (${params.join(',')})")
                    sql.execute('insert into SNP_REV_JOIN_COL (MOD_GUID,FK_NAME,FK_COL_NAME,FK_TABLE_NAME,PK_COL_NAME,PK_TABLE_NAME,POS) values (?,?,?,?,?,?,?)', params)
                } else {
                    logger.warning("${fkName} is missing FK_COL_NAME or PK_COL_NAME. Skipping reference (foreign keys) generation")
                }
            }
        } else {
            logger.warning("${fkName} is missing FK_COL_NAME or PK_COL_NAME. Skipping generation of [${fkName}]")
        }
    } else {
        logger.fine("Table [${childTable.Code.toString()}] executed by table filter. Skipping generation of [${fkName}].")
    }
}

try {
<%if ("NONE".equals(odiRef.getOption("MODEL_FILTER"))) {%>
    model.RootObject.Children.Model.each { Model ->
        <%if ("NONE".equals(odiRef.getOption("PACKAGE_FILTER"))) {%>
            // existing behaviour
            <%if ("NONE".equals(odiRef.getOption("TABLE_FILTER"))) {%>
                Model.Tables.Table.findAll { Table -> Table.Generated != '0'}.each parseTablesClosure
                Model.References.Reference.findAll { Reference -> Reference.parent().parent().Tables.Table.find { it.@Id == Reference.ChildTable.Table.@Ref }.Generated != '0' }.each parseReferencesClosure

            <%} else {%>
                Model.Tables.Table.findAll { Table -> Table.Generated != '0' && <%=odiRef.getOption("TABLE_FILTER")%>}.each parseTablesClosure
                Model.References.Reference.findAll { Reference -> Reference.parent().parent().Tables.Table.find { it.@Id == Reference.ChildTable.Table.@Ref }.Generated != '0' }.each parseReferencesClosure
            <%}%>
            <%if ("NONE".equals(odiRef.getOption("VIEW_FILTER"))) {%>
                Model.Views.View.findAll { View -> View.Generated != '0'}.each parseViewClosure
            <%} else {%>
                Model.Views.View.findAll { View -> View.Generated != '0' && <%=odiRef.getOption("VIEW_FILTER")%>}.each parseViewClosure
            <%}%>
        <%} else { %>
             // new existing behaviour package filter defined
             Model.Packages.Package.findAll { Package -> <%=odiRef.getOption("PACKAGE_FILTER")%>}.each parsePackagesClosure
             Model.References.Reference.findAll { Reference -> Reference.parent().parent().Tables.Table.find { it.@Id == Reference.ChildTable.Table.@Ref }.Generated != '0' }.each parseReferencesClosure

         <%}%>
    }
<%} else {%>
    model.RootObject.Children.Model.findAll {Model -> <%=odiRef.getOption("MODEL_FILTER")%>}.each { Model ->
        <%if ("NONE".equals(odiRef.getOption("PACKAGE_FILTER"))) {%>

            // existing behaviour
            <%if ("NONE".equals(odiRef.getOption("TABLE_FILTER"))) {%>
                Model.Tables.Table.findAll { Table -> Table.Generated != '0'}.each parseTablesClosure
                Model.References.Reference.findAll { Reference -> Reference.parent().parent().Tables.Table.find { it.@Id == Reference.ChildTable.Table.@Ref }.Generated != '0' }.each parseReferencesClosure

            <%} else {%>
                Model.Tables.Table.findAll { Table -> Table.Generated != '0' && <%=odiRef.getOption("TABLE_FILTER")%>}.each parseTablesClosure
                Model.References.Reference.findAll { Reference -> Reference.parent().parent().Tables.Table.find { it.@Id == Reference.ChildTable.Table.@Ref }.Generated != '0' }.each parseReferencesClosure
            <%}%>
                <%if ("NONE".equals(odiRef.getOption("VIEW_FILTER"))) {%>
                Model.Views.View.findAll { View -> View.Generated != '0'}.each parseViewClosure
            <%} else {%>
                Model.Views.View.findAll { View -> View.Generated != '0' && <%=odiRef.getOption("VIEW_FILTER")%>}.each parseViewClosure
            <%}%>
        <%} else { %>
             // new existing behaviour
             Model.Packages.Package.findAll { Package -> <%=odiRef.getOption("PACKAGE_FILTER")%>}.each parsePackagesClosure
             Model.References.Reference.findAll { Reference -> Reference.parent().parent().Tables.Table.find { it.@Id == Reference.ChildTable.Table.@Ref }.Generated != '0' }.each parseReferencesClosure

        <%}%>
    }
<%}%>
} finally {
    sql.commit()
    sql.close()
}]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[TERADATA]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13199]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2018-05-25 11:55:17.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[90feae05-8e63-44af-8a69-aca435ce2961]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1078]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[248]]></Field>
	<Field name="KcmAk" type="java.lang.String">null</Field>
	<Field name="KcmCond" type="java.lang.String">null</Field>
	<Field name="KcmErrDel" type="java.lang.String">null</Field>
	<Field name="KcmJoin" type="java.lang.String">null</Field>
	<Field name="KcmNull" type="java.lang.String">null</Field>
	<Field name="KcmPk" type="java.lang.String">null</Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String">null</Field>
	<Field name="KimJrnPop" type="java.lang.String">null</Field>
	<Field name="KjmCreate" type="java.lang.String">null</Field>
	<Field name="KjmDrop" type="java.lang.String">null</Field>
	<Field name="KjmExtend" type="java.lang.String">null</Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String">null</Field>
	<Field name="KjmPurge" type="java.lang.String">null</Field>
	<Field name="KjmSetInstall" type="java.lang.String">null</Field>
	<Field name="KjmSetUninstall" type="java.lang.String">null</Field>
	<Field name="KjmSubscribe" type="java.lang.String">null</Field>
	<Field name="KjmTableOrder" type="java.lang.String">null</Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String">null</Field>
	<Field name="KjmUnsubscribe" type="java.lang.String">null</Field>
	<Field name="KlmAfterInt" type="java.lang.String">null</Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String">null</Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2018-05-25 11:55:17.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[40]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set MetaData]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[92c214b7-0152-4f5f-b244-40d4238a3d82]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[13199]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SnpsReverseSetMetaData -MODEL=<%=odiRef.getModel("GLOBAL_ID")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_PROJECT.92]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9315856a-d486-4f59-87a5-18d5fcbff40a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[Vodafone BI (Oracle)]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.13193]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d5af5e48-a248-4400-9874-d9e69aa627c1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.248]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8080912d-8d2a-4edc-83dc-6d29c70c1908]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[Vodafone BI (Oracle).RKM Oracle SAP Sybase PowerDesigner PDM]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[20.39]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.13194]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2da88106-e535-4fd9-a835-5d3d44f1d758]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.13195]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d9cf7b4f-eb17-4d40-ad1b-06e7f99c2096]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.13196]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ef90b0ef-6528-423f-8f43-dba8608137ef]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.13197]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ea1900b4-6057-4d33-b407-825fd0e61afe]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.13198]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5f182551-b760-466d-ba8a-035fdf85d062]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.13199]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[92c214b7-0152-4f5f-b244-40d4238a3d82]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpImportRep">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f820ab87-5b84-46f0-89ae-665128008f4c]]></Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepShortId" type="com.sunopsis.sql.DbInt"><![CDATA[31]]></Field>
	<Field name="RepTimestamp" type="java.lang.String"><![CDATA[1538157840298]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[7]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[9]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[7]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[21]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.08]]></Field>
</Object>
</SunopsisExport>
